version: "3.9"
networks:
  roboshop:
    driver: bridge
services:
  web:
    build:
      context: ./web
      dockerfile: Dockerfile
    image: kalyanreddy932/roboshop:web-final
    container_name: web
    ports:
    - "80:80"
    depends_on:
    - catalogue
    - user
    - cart
    - mysql
    - shipping
    - payment
  mongodb:
    volumes:
    - mongodb:/data/db
    build:
      context: ./mongo
      dockerfile: Dockerfile
    image: kalyanreddy932/robotshop:mongodb-compose1
    container_name: mongodb
  catalogue:
    build:
      context: ./catalogue
      dockerfile: Dockerfile
    image: kalyanreddy932/robotshop:catalogue-compose1
    container_name: catalogue
    depends_on:
    - mongodb
  redis:
    volumes:
    - redis:/data
    image: redis
    container_name: redis
  user:
    build:
      context: ./user
      dockerfile: Dockerfile
    image: kalyanreddy932/robotshop:user-compose1
    container_name: user
    depends_on:
    - mongodb
    - redis
  cart:
    build:
      context: ./cart
      dockerfile: Dockerfile
    image: kalyanreddy932/roboshop:cart-compose1
    container_name: cart
    depends_on:
    - redis
    - catalogue
  mysql:
    volumes:
    - mysql:/var/lib/mysql
    build:
      context: ./mysql
      dockerfile: Dockerfile
    image: kalyanreddy932/roboshop:mysql-compose1
    container_name: mysql
  shipping:
    build:
      context: ./shipping
      dockerfile: Dockerfile
    image: kalyanreddy932/roboshop:shipping-compose1
    container_name: shipping
    depends_on:
    - mysql
  rabbitmq:
    volumes:
    - rabbitmq:/var/lib/rabbitmq
    image: rabbitmq
    container_name: rabbitmq
  payment:
    build:
      context: ./payment
      dockerfile: Dockerfile
    image: payment:v1
    container_name: payment
    depends_on:
    - rabbitmq
  ratings:
    build:
      context: ./ratings
      dockerfile: Dockerfile
    image: kalyanreddy932/roboshop:ratings-compose1
    container_name: ratings
    depends_on:
    - mysql
volumes:
# This is equivalent to docker volume create [volume-name]. these are named volumes
  mysql:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: /root/projects/mysql
  redis:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: /root/projects/redis
  rabbitmq:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: /root/projects/rabbitmq
  mongodb:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: /root/projects/mongodb